plugins {
    id 'application'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'com.google.protobuf' version '0.8.8'
    id 'idea'
}

repositories {
    maven {
        // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
    }
    mavenLocal()
}

group = 'com.example'
version = '1.0.0-SNAPSHOT'
applicationName = 'demo-springboot-grpc'
description = 'Demo springboot grpc project'
sourceCompatibility = 1.8
targetCompatibility = 1.8

def springBootVersion = '2.1.3.RELEASE'
def springVersion = '5.1.5.RELEASE'
def grpcSpringBootVersion = '3.2.0'
def grpcVersion = '1.19.0'
def protobufVersion = '3.6.1'

dependencies {
    compile "io.github.lognet:grpc-spring-boot-starter:${grpcSpringBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

protobuf {
    generatedFilesBaseDir = "$buildDir/generated/sources/proto"

    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/sources/proto/main/grpc'
            srcDirs 'build/generated/sources/proto/main/java'
        }
    }
}

startScripts.enabled = false

application {
    mainClassName = 'com.example.helloworld.SpringGrpcApplication'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task helloWorldServer(type: CreateStartScripts) {
    mainClassName = 'com.example.helloworld.old.HelloWorldServer'
    applicationName = 'hello-world-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task helloWorldClient(type: CreateStartScripts) {
    mainClassName = 'com.examples.helloworld.old.HelloWorldClient'
    applicationName = 'hello-world-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}